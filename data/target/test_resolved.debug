fn test::std::vec::foreach;39;<1>;(2);<int>;(Struct(test::std::vec::Vec;<1>;<int>),fn(int)->unit) (stack: 4, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -4)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(0)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Loop
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Less)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        FieldAccess (offset: 4, struct size: 16)
          Expr: ValueData { size: 16, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 24)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 4
        FunctionCall Pointer(ResolvedExpression { kind: ValueOfAssignable(LocalVariable(16)), value_data: ValueData { size: 8, location: Register }, stack_discard: 0 }) (return on stack: 0)
          Expr: ValueData { size: 4, location: Register }, stack discard: 20
          FunctionCall Function("test::std::vec::get;27;<1>;(2);<int>;(Struct(test::std::vec::Vec;<1>;<int>),int)") (return on stack: 0)
            Expr: ValueData { size: 16, location: Stack }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 24)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: -4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Increment (prefix: false)
          LocalVariable (offset: -4)
      }
  }
fn test::std::string::free;19;<0>;(1);<>;(Struct(test::std::vec::Vec;<1>;<char>)) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::mem::free;56;<1>;(1);<char>;(&char)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      FieldAccess (offset: 8, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
  }
fn test::std::array::fill;2;<1>;(2);<int>;(Struct(test::std::array::Array;<1>;<int>),int) (stack: 4, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -4)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(0)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Loop
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Less)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        FieldAccess (offset: 0, struct size: 12)
          Expr: ValueData { size: 12, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 20)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Assign Assign
          ArrayIndex (element_size: 4)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            FieldAccess (offset: 4, struct size: 12)
              Expr: ValueData { size: 12, location: Stack }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: 20)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: -4)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Increment (prefix: false)
          LocalVariable (offset: -4)
      }
  }
fn test::::generic_call_test;69;<1>;(2);<int>;(fn(int)->int,int) (stack: 0, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Register }, stack discard: 4
    FunctionCall Pointer(ResolvedExpression { kind: ValueOfAssignable(LocalVariable(20)), value_data: ValueData { size: 8, location: Register }, stack_discard: 0 }) (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
  }
fn test::std::vec::get;26;<1>;(2);<int>;(&Struct(test::std::vec::Vec;<1>;<int>),int) (stack: 0, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    If
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Logical(Or)
        Expr: ValueData { size: 1, location: Register }, stack discard: 0
        Binary Comparison(Less)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(0)
        Expr: ValueData { size: 1, location: Register }, stack discard: 0
        Binary Comparison(GreaterEquals)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            PointerFieldAccess (offset: 4, indirections: 1)
              Expr: ValueData { size: 8, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: 20)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 8
        FunctionCall Function("test::std::panic::panic;55;<0>;(1);<>;(&char)") (return on stack: 0)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          Constant 0
      }
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    ValueOfAssignable
      ArrayIndex (element_size: 4)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          PointerFieldAccess (offset: 8, indirections: 1)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 20)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
  }
fn test::std::mem::malloc;57;<1>;(1);<int>;(int) (stack: 0, return location: Register)
  Expr: ValueData { size: 8, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 8, location: Register }, stack discard: 0
    Unary PointerCast
      Expr: ValueData { size: 8, location: Register }, stack discard: 4
      FunctionCall Function("builtin::::malloc;-1;<0>;(1);<>;(int)") (return on stack: 0)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Binary Math(Mul)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(4)
  }
fn test::std::io::print_file;46;<0>;(1);<>;(Struct(test::std::io::File;<0>;<>)) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(91)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::print;53;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 0, struct size: 4)
        Expr: ValueData { size: 4, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(93)
  }
fn test::std::vec::push;35;<1>;(2);<int>;(&Struct(test::std::vec::Vec;<1>;<int>),int) (stack: 8, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    If
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Equals)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          PointerFieldAccess (offset: 4, indirections: 1)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 20)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          PointerFieldAccess (offset: 0, indirections: 1)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 20)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Assign MathAssign(Mul)
          PointerFieldAccess (offset: 0, indirections: 1)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 20)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(2)
        Expr: ValueData { size: 0, location: None }, stack discard: 0
        Declaration (offset: -8)
          Expr: ValueData { size: 8, location: Register }, stack discard: 12
          FunctionCall Function("test::std::mem::realloc;58;<1>;(2);<int>;(&int,int)") (return on stack: 0)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              PointerFieldAccess (offset: 8, indirections: 1)
                Expr: ValueData { size: 8, location: Register }, stack discard: 0
                ValueOfAssignable
                  LocalVariable (offset: 20)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              PointerFieldAccess (offset: 0, indirections: 1)
                Expr: ValueData { size: 8, location: Register }, stack discard: 0
                ValueOfAssignable
                  LocalVariable (offset: 20)
        Expr: ValueData { size: 0, location: None }, stack discard: 20
        FunctionCall Function("test::std::mem::memcopy;60;<1>;(3);<int>;(&int,&int,int)") (return on stack: 0)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          ValueOfAssignable
            PointerFieldAccess (offset: 8, indirections: 1)
              Expr: ValueData { size: 8, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: 20)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -8)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            PointerFieldAccess (offset: 4, indirections: 1)
              Expr: ValueData { size: 8, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: 20)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        Assign Assign
          PointerFieldAccess (offset: 8, indirections: 1)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 20)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -8)
      }
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    Assign Assign
      ArrayIndex (element_size: 4)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          PointerFieldAccess (offset: 8, indirections: 1)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 20)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          PointerFieldAccess (offset: 4, indirections: 1)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 20)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    Increment (prefix: false)
      PointerFieldAccess (offset: 4, indirections: 1)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 20)
  }
fn test::generic_test::do_nothing;8;<1>;(1);<Struct(test::generic_test::Option;<1>;<int>)>;(Struct(test::generic_test::Option;<1>;<int>)) (stack: 0, return location: Stack { offset: 20, size: 4 })
  Expr: ValueData { size: 4, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: 16)
  }
fn test::generic_test::add1;15;<0>;(1);<>;(int) (stack: 0, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    Binary Math(Add)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(1)
  }
fn test::std::panic::panic;55;<0>;(1);<>;(&char) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::print::println;48;<0>;(1);<>;(&char)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Constant 1
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::print::println;48;<0>;(1);<>;(&char)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("builtin::::exit;-1;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(1)
  }
fn test::std::array::set;1;<1>;(3);<int>;(Struct(test::std::array::Array;<1>;<int>),int,int) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    Assign Assign
      ArrayIndex (element_size: 4)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        FieldAccess (offset: 4, struct size: 12)
          Expr: ValueData { size: 12, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 24)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 20)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
  }
fn test::std::io::write_file;45;<0>;(2);<>;(Struct(test::std::io::File;<0>;<>),&Struct(test::std::vec::Vec;<1>;<char>)) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("builtin::::fwrite;-1;<0>;(3);<>;(&char,int,int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      ValueOfAssignable
        PointerFieldAccess (offset: 8, indirections: 1)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        PointerFieldAccess (offset: 4, indirections: 1)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 0, struct size: 4)
        Expr: ValueData { size: 4, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 24)
  }
fn test::::unit_test;65;<0>;(2);<>;(unit,unit) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: 16)
  }
fn test::std::print::print;53;<0>;(1);<>;(int) (stack: 8, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    If
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Less)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(0)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 1
        FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
          Expr: ValueData { size: 1, location: Register }, stack discard: 0
          Literal Char(45)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Assign Assign
          LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Unary Math(Negate)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 16)
      }
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    If
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(LessEquals)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(9)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 1
        FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
          Expr: ValueData { size: 1, location: Register }, stack discard: 0
          Unary IntCast(1)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            Binary Math(Add)
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              Binary Math(Mod)
                Expr: ValueData { size: 4, location: Register }, stack discard: 0
                ValueOfAssignable
                  LocalVariable (offset: 16)
                Expr: ValueData { size: 4, location: Register }, stack discard: 0
                Literal Integer(10)
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              Unary IntCast(1)
                Expr: ValueData { size: 1, location: Register }, stack discard: 0
                Literal Char(48)
        Expr: ValueData { size: 0, location: None }, stack discard: 0
        Return
      }
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -4)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(1)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Loop
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(GreaterEquals)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Binary Math(Div)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(10)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Assign MathAssign(Mul)
          LocalVariable (offset: -4)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(10)
      }
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Loop
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Greater)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(0)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 0
        Declaration (offset: -8)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Binary Math(Div)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 16)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: -4)
        Expr: ValueData { size: 0, location: None }, stack discard: 1
        FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
          Expr: ValueData { size: 1, location: Register }, stack discard: 0
          Unary IntCast(1)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            Binary Math(Add)
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: -8)
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              Unary IntCast(1)
                Expr: ValueData { size: 1, location: Register }, stack discard: 0
                Literal Char(48)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Assign MathAssign(Mod)
          LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Assign MathAssign(Div)
          LocalVariable (offset: -4)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(10)
      }
  }
fn test::std::print::println;48;<0>;(1);<>;(&char) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::print::print;47;<0>;(1);<>;(&char)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(10)
  }
fn test::std::string::create_sized_string;17;<0>;(1);<>;(int) (stack: 16, return location: Stack { offset: 20, size: 16 })
  Expr: ValueData { size: 16, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -16)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 4
      FunctionCall Function("test::std::vec::create_sized_vec;33;<1>;(1);<char>;(int)") (return on stack: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
    Expr: ValueData { size: 16, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: -16)
  }
fn small_test::::add;72;<0>;(2);<>;(int,int) (stack: 0, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    Binary Math(Add)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 20)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
  }
fn test::::mul2;66;<0>;(1);<>;(int) (stack: 0, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    Binary Math(Mul)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(2)
  }
fn test::std::io::file_test;40;<0>;(0);<>;() (stack: 24, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -4)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 8
      FunctionCall Function("test::std::io::open_file;41;<0>;(1);<>;(&char)") (return on stack: 4)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        Constant 2
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -8)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 8
      FunctionCall Function("test::std::io::open_file;41;<0>;(1);<>;(&char)") (return on stack: 4)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        Constant 3
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(10)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -24)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 8
      FunctionCall Function("test::std::io::read_chars;44;<0>;(2);<>;(Struct(test::std::io::File;<0>;<>),int)") (return on stack: 16)
        Expr: ValueData { size: 4, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(100)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::string::print;18;<0>;(1);<>;(Struct(test::std::vec::Vec;<1>;<char>))") (return on stack: 0)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -24)
    Expr: ValueData { size: 0, location: None }, stack discard: 12
    FunctionCall Function("test::std::io::write_file;45;<0>;(2);<>;(Struct(test::std::io::File;<0>;<>),&Struct(test::std::vec::Vec;<1>;<char>))") (return on stack: 0)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -8)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Borrow
        LocalVariable (offset: -24)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::io::close;42;<0>;(1);<>;(Struct(test::std::io::File;<0>;<>))") (return on stack: 0)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -4)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::io::close;42;<0>;(1);<>;(Struct(test::std::io::File;<0>;<>))") (return on stack: 0)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -8)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::io::print_file;46;<0>;(1);<>;(Struct(test::std::io::File;<0>;<>))") (return on stack: 0)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -4)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::io::print_file;46;<0>;(1);<>;(Struct(test::std::io::File;<0>;<>))") (return on stack: 0)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -8)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::string::free;19;<0>;(1);<>;(Struct(test::std::vec::Vec;<1>;<char>))") (return on stack: 0)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -24)
  }
fn test::std::vec::get;27;<1>;(2);<int>;(Struct(test::std::vec::Vec;<1>;<int>),int) (stack: 0, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Register }, stack discard: 12
    FunctionCall Function("test::std::vec::get;26;<1>;(2);<int>;(&Struct(test::std::vec::Vec;<1>;<int>),int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Borrow
        LocalVariable (offset: 20)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
  }
fn test::std::io::read_chars;44;<0>;(2);<>;(Struct(test::std::io::File;<0>;<>),int) (stack: 16, return location: Stack { offset: 24, size: 16 })
  Expr: ValueData { size: 16, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -16)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 4
      FunctionCall Function("test::std::string::create_sized_string;17;<0>;(1);<>;(int)") (return on stack: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
    Expr: ValueData { size: 4, location: Register }, stack discard: 16
    FunctionCall Function("builtin::::fread;-1;<0>;(3);<>;(&char,int,int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      FieldAccess (offset: 8, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 4, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 0, struct size: 4)
        Expr: ValueData { size: 4, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 20)
    Expr: ValueData { size: 16, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: -16)
  }
fn test::std::array::get;0;<1>;(2);<int>;(Struct(test::std::array::Array;<1>;<int>),int) (stack: 0, return location: Register)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Return
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        ArrayIndex (element_size: 4)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          FieldAccess (offset: 4, struct size: 12)
            Expr: ValueData { size: 12, location: Stack }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 20)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
  }
fn test::std::vec::clone;37;<1>;(1);<int>;(Struct(test::std::vec::Vec;<1>;<int>)) (stack: 16, return location: Stack { offset: 32, size: 16 })
  Expr: ValueData { size: 16, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -16)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 4
      FunctionCall Function("test::std::vec::create_vec;32;<1>;(1);<int>;(int)") (return on stack: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        FieldAccess (offset: 0, struct size: 16)
          Expr: ValueData { size: 16, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
    Expr: ValueData { size: 0, location: None }, stack discard: 20
    FunctionCall Function("test::std::mem::memcopy;60;<1>;(3);<int>;(&int,&int,int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      FieldAccess (offset: 8, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      FieldAccess (offset: 8, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 4, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    Assign Assign
      FieldAccess (offset: 4)
        LocalVariable (offset: -16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 4, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
    Expr: ValueData { size: 16, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: -16)
  }
fn test::std::vec::create_sized_vec;33;<1>;(1);<char>;(int) (stack: 16, return location: Stack { offset: 20, size: 16 })
  Expr: ValueData { size: 16, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -16)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      StructLiteral
          Expr: ValueData { size: 8, location: Register }, stack discard: 4
          FunctionCall Function("test::std::mem::malloc;57;<1>;(1);<char>;(int)") (return on stack: 0)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::mem::memset;59;<1>;(3);<char>;(&char,int,int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      FieldAccess (offset: 8, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
    Expr: ValueData { size: 16, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: -16)
  }
fn test::std::print::print;47;<0>;(1);<>;(&char) (stack: 4, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -4)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(0)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Loop
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(NotEquals)
        Expr: ValueData { size: 1, location: Register }, stack discard: 0
        ValueOfAssignable
          ArrayIndex (element_size: 1)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 16)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: -4)
        Expr: ValueData { size: 1, location: Register }, stack discard: 0
        Literal Char(0)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Increment (prefix: false)
          LocalVariable (offset: -4)
      }
    Expr: ValueData { size: 0, location: None }, stack discard: 12
    FunctionCall Function("builtin::::write;-1;<0>;(2);<>;(&char,int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -4)
  }
fn test::std::vec::create_vec;32;<1>;(1);<int>;(int) (stack: 16, return location: Stack { offset: 20, size: 16 })
  Expr: ValueData { size: 16, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    If
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(LessEquals)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(0)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 8
        FunctionCall Function("test::std::panic::panic;55;<0>;(1);<>;(&char)") (return on stack: 0)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          Constant 4
      }
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -16)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      StructLiteral
          Expr: ValueData { size: 8, location: Register }, stack discard: 4
          FunctionCall Function("test::std::mem::malloc;57;<1>;(1);<int>;(int)") (return on stack: 0)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(0)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
    Expr: ValueData { size: 16, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: -16)
  }
fn test::std::print::print;51;<0>;(1);<>;(bool) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    If
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 8
        FunctionCall Function("test::std::print::print;47;<0>;(1);<>;(&char)") (return on stack: 0)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          Constant 5
      }
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 8
        FunctionCall Function("test::std::print::print;47;<0>;(1);<>;(&char)") (return on stack: 0)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          Constant 6
      }
  }
fn test::std::print::println;54;<0>;(1);<>;(int) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::print;53;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(10)
  }
fn test::generic_test::partial_generic_function;14;<1>;(1);<char>;(char) (stack: 0, return location: Stack { offset: 17, size: 2 })
  Expr: ValueData { size: 2, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 2, location: Stack }, stack discard: 0
    StructLiteral
        Expr: ValueData { size: 1, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
        Expr: ValueData { size: 1, location: Stack }, stack discard: 0
        StructLiteral
            Expr: ValueData { size: 1, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 16)
  }
fn test::std::io::open_file;41;<0>;(1);<>;(&char) (stack: 4, return location: Stack { offset: 24, size: 4 })
  Expr: ValueData { size: 4, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -4)
      Expr: ValueData { size: 4, location: Register }, stack discard: 8
      FunctionCall Function("builtin::::fopen;-1;<0>;(1);<>;(&char)") (return on stack: 0)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
    Expr: ValueData { size: 4, location: Stack }, stack discard: 0
    StructLiteral
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -4)
  }
fn test::::generic_sizeof_test;63;<1>;(0);<int>;() (stack: 0, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    Literal Integer(4)
  }
fn test::std::mem::memcopy;60;<1>;(3);<int>;(&int,&int,int) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 20
    FunctionCall Function("builtin::::memcopy;-1;<0>;(3);<>;(&unit,&unit,int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Unary PointerCast
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 28)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Unary PointerCast
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 20)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Binary Math(Mul)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(4)
  }
fn test::std::mem::malloc;57;<1>;(1);<char>;(int) (stack: 0, return location: Register)
  Expr: ValueData { size: 8, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 8, location: Register }, stack discard: 0
    Unary PointerCast
      Expr: ValueData { size: 8, location: Register }, stack discard: 4
      FunctionCall Function("builtin::::malloc;-1;<0>;(1);<>;(int)") (return on stack: 0)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Binary Math(Mul)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(1)
  }
fn test::std::print::println;50;<0>;(1);<>;(char) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(10)
  }
fn test::generic_test::generic_function2;12;<1>;(1);<int>;(Struct(test::generic_test::Option;<1>;<int>)) (stack: 0, return location: Stack { offset: 20, size: 4 })
  Expr: ValueData { size: 4, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: 16)
  }
fn test::::generic_sizeof_test;64;<2>;(0);<Struct(test::generic_test::MyStruct;<2>;<char,long>),int>;() (stack: 0, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    Binary Math(Mul)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(21)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(4)
  }
fn test::std::io::close;42;<0>;(1);<>;(Struct(test::std::io::File;<0>;<>)) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("builtin::::fclose;-1;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 0, struct size: 4)
        Expr: ValueData { size: 4, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
  }
fn test::generic_test::test;10;<0>;(0);<>;() (stack: 62, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -4)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 0
      StructLiteral
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(10)
    Expr: ValueData { size: 4, location: Stack }, stack discard: 8
    FunctionCall Function("test::generic_test::do_nothing;8;<1>;(1);<Struct(test::generic_test::Option;<1>;<int>)>;(Struct(test::generic_test::Option;<1>;<int>))") (return on stack: 4)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -4)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -24)
      Expr: ValueData { size: 20, location: Stack }, stack discard: 12
      FunctionCall Function("test::generic_test::createStruct;9;<2>;(3);<int,int>;(int,int,int)") (return on stack: 20)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(10)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(20)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(30)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -32)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Borrow
        LocalVariable (offset: -24)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -36)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -4)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -44)
      Expr: ValueData { size: 8, location: Stack }, stack discard: 0
      StructLiteral
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(10)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(20)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -48)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 0
      StructLiteral
          Expr: ValueData { size: 4, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -4)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -52)
      Expr: ValueData { size: 4, location: Register }, stack discard: 4
      FunctionCall Function("test::generic_test::generic_function;11;<1>;(1);<int>;(int)") (return on stack: 0)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(10)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -56)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 4
      FunctionCall Function("test::generic_test::generic_function2;12;<1>;(1);<int>;(Struct(test::generic_test::Option;<1>;<int>))") (return on stack: 4)
        Expr: ValueData { size: 4, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -4)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -60)
      Expr: ValueData { size: 4, location: Stack }, stack discard: 4
      FunctionCall Function("test::generic_test::generic_function2;12;<1>;(1);<Struct(test::generic_test::Option;<1>;<int>)>;(Struct(test::generic_test::Option;<1>;<Struct(test::generic_test::Option;<1>;<int>)>))") (return on stack: 4)
        Expr: ValueData { size: 4, location: Stack }, stack discard: 0
        StructLiteral
            Expr: ValueData { size: 4, location: Stack }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: -4)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -62)
      Expr: ValueData { size: 2, location: Stack }, stack discard: 1
      FunctionCall Function("test::generic_test::partial_generic_function;14;<1>;(1);<char>;(char)") (return on stack: 2)
        Expr: ValueData { size: 1, location: Register }, stack discard: 0
        Literal Char(99)
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    Binary Math(Add)
      Expr: ValueData { size: 4, location: Register }, stack discard: 4
      FunctionCall Function("test::generic_test::add1;15;<0>;(1);<>;(int)") (return on stack: 0)
        Expr: ValueData { size: 4, location: Register }, stack discard: 4
        FunctionCall Function("test::generic_test::generic_function;11;<1>;(1);<int>;(int)") (return on stack: 0)
          Expr: ValueData { size: 4, location: Register }, stack discard: 4
          FunctionCall Function("test::generic_test::add1;15;<0>;(1);<>;(int)") (return on stack: 0)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            FieldAccess (offset: 0, struct size: 4)
              Expr: ValueData { size: 4, location: Stack }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: -4)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -52)
  }
fn test::std::array::create_array;4;<1>;(1);<int>;(int) (stack: 12, return location: Stack { offset: 20, size: 12 })
  Expr: ValueData { size: 12, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -12)
      Expr: ValueData { size: 12, location: Stack }, stack discard: 0
      StructLiteral
          Expr: ValueData { size: 8, location: Register }, stack discard: 4
          FunctionCall Function("test::std::mem::malloc;57;<1>;(1);<int>;(int)") (return on stack: 0)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::mem::memset;59;<1>;(3);<int>;(&int,int,int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      FieldAccess (offset: 4, struct size: 12)
        Expr: ValueData { size: 12, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -12)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
    Expr: ValueData { size: 12, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: -12)
  }
fn test::std::mem::free;56;<1>;(1);<int>;(&int) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("builtin::::free;-1;<0>;(1);<>;(&unit)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Unary PointerCast
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
  }
fn test::std::array::map;6;<2>;(2);<int,int>;(Struct(test::std::array::Array;<1>;<int>),fn(int)->int) (stack: 16, return location: Stack { offset: 36, size: 12 })
  Expr: ValueData { size: 12, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -12)
      Expr: ValueData { size: 12, location: Stack }, stack discard: 4
      FunctionCall Function("test::std::array::create_array;4;<1>;(1);<int>;(int)") (return on stack: 12)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        FieldAccess (offset: 0, struct size: 12)
          Expr: ValueData { size: 12, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 24)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(0)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Loop
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Less)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        FieldAccess (offset: 0, struct size: 12)
          Expr: ValueData { size: 12, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 24)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 20
        FunctionCall Function("test::std::array::set;1;<1>;(3);<int>;(Struct(test::std::array::Array;<1>;<int>),int,int)") (return on stack: 0)
          Expr: ValueData { size: 12, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -12)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 4
          FunctionCall Pointer(ResolvedExpression { kind: ValueOfAssignable(LocalVariable(16)), value_data: ValueData { size: 8, location: Register }, stack_discard: 0 }) (return on stack: 0)
            Expr: ValueData { size: 4, location: Register }, stack discard: 16
            FunctionCall Function("test::std::array::get;0;<1>;(2);<int>;(Struct(test::std::array::Array;<1>;<int>),int)") (return on stack: 0)
              Expr: ValueData { size: 12, location: Stack }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: 24)
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: -16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Increment (prefix: false)
          LocalVariable (offset: -16)
      }
    Expr: ValueData { size: 12, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: -12)
  }
fn test::generic_test::createStruct;9;<2>;(3);<int,int>;(int,int,int) (stack: 20, return location: Stack { offset: 28, size: 20 })
  Expr: ValueData { size: 20, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -20)
      Expr: ValueData { size: 20, location: Stack }, stack discard: 0
      StructLiteral
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 24)
          Expr: ValueData { size: 4, location: Stack }, stack discard: 0
          StructLiteral
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: 20)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          Borrow
            LocalVariable (offset: 24)
    Expr: ValueData { size: 8, location: Register }, stack discard: 0
    Assign Assign
      FieldAccess (offset: 0)
        LocalVariable (offset: -20)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Borrow
        FieldAccess (offset: 16)
          LocalVariable (offset: -20)
    Expr: ValueData { size: 20, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: -20)
  }
fn test::std::mem::free;56;<1>;(1);<char>;(&char) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("builtin::::free;-1;<0>;(1);<>;(&unit)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Unary PointerCast
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
  }
fn test::enum_test::enum_test;25;<0>;(0);<>;() (stack: 8, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::print::println;48;<0>;(1);<>;(&char)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Constant 7
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -4)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(1)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Unary IntCast(4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -4)
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("test::std::print::println;52;<0>;(1);<>;(bool)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Equals)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(2)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(3)
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::print::println;48;<0>;(1);<>;(&char)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Constant 8
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Unary IntCast(4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(2147483647)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -8)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Unary IntCast(4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(4)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Unary IntCast(4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -8)
  }
fn test::generic_test::generic_function;11;<1>;(1);<int>;(int) (stack: 0, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: 16)
  }
fn test::std::vec::free;34;<1>;(1);<int>;(Struct(test::std::vec::Vec;<1>;<int>)) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::mem::free;56;<1>;(1);<int>;(&int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      FieldAccess (offset: 8, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
  }
fn test::std::array::print;3;<0>;(1);<>;(Struct(test::std::array::Array;<1>;<int>)) (stack: 4, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -4)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(0)
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(91)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Loop
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Less)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        FieldAccess (offset: 0, struct size: 12)
          Expr: ValueData { size: 12, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 0
        If
          Expr: ValueData { size: 1, location: Register }, stack discard: 0
          Binary Comparison(Greater)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: -4)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            Literal Integer(0)
          Expr: ValueData { size: 0, location: None }, stack discard: 0
          {
            Expr: ValueData { size: 0, location: None }, stack discard: 1
            FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
              Expr: ValueData { size: 1, location: Register }, stack discard: 0
              Literal Char(44)
            Expr: ValueData { size: 0, location: None }, stack discard: 1
            FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
              Expr: ValueData { size: 1, location: Register }, stack discard: 0
              Literal Char(32)
          }
        Expr: ValueData { size: 0, location: None }, stack discard: 4
        FunctionCall Function("test::std::print::print;53;<0>;(1);<>;(int)") (return on stack: 0)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            ArrayIndex (element_size: 4)
              Expr: ValueData { size: 8, location: Register }, stack discard: 0
              FieldAccess (offset: 4, struct size: 12)
                Expr: ValueData { size: 12, location: Stack }, stack discard: 0
                ValueOfAssignable
                  LocalVariable (offset: 16)
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: -4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Increment (prefix: false)
          LocalVariable (offset: -4)
      }
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(93)
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(10)
  }
fn test::std::print::println;52;<0>;(1);<>;(bool) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("test::std::print::print;51;<0>;(1);<>;(bool)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(10)
  }
fn test::::main;61;<0>;(0);<>;() (stack: 217, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -12)
      Expr: ValueData { size: 12, location: Stack }, stack discard: 4
      FunctionCall Function("test::std::array::create_array;4;<1>;(1);<int>;(int)") (return on stack: 12)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(100)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::array::fill;2;<1>;(2);<int>;(Struct(test::std::array::Array;<1>;<int>),int)") (return on stack: 0)
      Expr: ValueData { size: 12, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -12)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(10)
    Expr: ValueData { size: 0, location: None }, stack discard: 20
    FunctionCall Function("test::std::array::set;1;<1>;(3);<int>;(Struct(test::std::array::Array;<1>;<int>),int,int)") (return on stack: 0)
      Expr: ValueData { size: 12, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -12)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(8)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FunctionCall Function("test::::generic_sizeof_test;64;<2>;(0);<Struct(test::generic_test::MyStruct;<2>;<char,long>),int>;()") (return on stack: 0)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Loop
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      Declaration (offset: -16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Less)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(5)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Increment (prefix: false)
        LocalVariable (offset: -16)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 20
        FunctionCall Function("test::std::array::set;1;<1>;(3);<int>;(Struct(test::std::array::Array;<1>;<int>),int,int)") (return on stack: 0)
          Expr: ValueData { size: 12, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -12)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -16)
        Expr: ValueData { size: 0, location: None }, stack discard: 0
        FunctionCall Function("test::::unit_test;65;<0>;(2);<>;(unit,unit)") (return on stack: 0)
          Expr: ValueData { size: 0, location: None }, stack discard: 0
          Continue
          Expr: ValueData { size: 0, location: None }, stack discard: 0
          Break
        Expr: ValueData { size: 0, location: None }, stack discard: 20
        FunctionCall Function("test::std::array::set;1;<1>;(3);<int>;(Struct(test::std::array::Array;<1>;<int>),int,int)") (return on stack: 0)
          Expr: ValueData { size: 12, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -12)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Binary Math(Add)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: -16)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            Literal Integer(50)
      }
    Expr: ValueData { size: 0, location: None }, stack discard: 12
    FunctionCall Function("test::std::array::print;3;<0>;(1);<>;(Struct(test::std::array::Array;<1>;<int>))") (return on stack: 0)
      Expr: ValueData { size: 12, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -12)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -36)
      Expr: ValueData { size: 20, location: Stack }, stack discard: 12
      FunctionCall Function("test::generic_test::createStruct;9;<2>;(3);<int,int>;(int,int,int)") (return on stack: 20)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(10)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(20)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(30)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    FunctionCall Function("test::std::io::file_test;40;<0>;(0);<>;()") (return on stack: 0)
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    FunctionCall Function("test::::generic_sizeof_test;63;<1>;(0);<int>;()") (return on stack: 0)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -40)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(0)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Unary IntCast(4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(1)
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("test::std::print::println;52;<0>;(1);<>;(bool)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Equals)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(1)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(1)
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::print::println;48;<0>;(1);<>;(&char)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Constant 9
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::print;53;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Unary IntCast(4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(-240)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    FunctionCall Function("test::enum_test::enum_test;25;<0>;(0);<>;()") (return on stack: 0)
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::print::println;48;<0>;(1);<>;(&char)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Constant 10
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -48)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      FunctionPointer test::::mul2;66;<0>;(1);<>;(int)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -52)
      Expr: ValueData { size: 4, location: Register }, stack discard: 4
      FunctionCall Pointer(ResolvedExpression { kind: ValueOfAssignable(LocalVariable(-48)), value_data: ValueData { size: 8, location: Register }, stack_discard: 0 }) (return on stack: 0)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(10)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -52)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 4
      FunctionCall Pointer(ResolvedExpression { kind: ValueOfAssignable(LocalVariable(-48)), value_data: ValueData { size: 8, location: Register }, stack_discard: 0 }) (return on stack: 0)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(10)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 12
      FunctionCall Function("test::::call_test_fn;68;<0>;(2);<>;(fn(int)->int,int)") (return on stack: 0)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -48)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(10)
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::print::println;48;<0>;(1);<>;(&char)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Constant 11
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -60)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      FunctionPointer test::::generic_call_test;69;<1>;(2);<int>;(fn(int)->int,int)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -64)
      Expr: ValueData { size: 4, location: Register }, stack discard: 12
      FunctionCall Pointer(ResolvedExpression { kind: ValueOfAssignable(LocalVariable(-60)), value_data: ValueData { size: 8, location: Register }, stack_discard: 0 }) (return on stack: 0)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -48)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(12)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -64)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -76)
      Expr: ValueData { size: 12, location: Stack }, stack discard: 20
      FunctionCall Function("test::std::array::map;6;<2>;(2);<int,int>;(Struct(test::std::array::Array;<1>;<int>),fn(int)->int)") (return on stack: 12)
        Expr: ValueData { size: 12, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -12)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -48)
    Expr: ValueData { size: 0, location: None }, stack discard: 12
    FunctionCall Function("test::std::array::print;3;<0>;(1);<>;(Struct(test::std::array::Array;<1>;<int>))") (return on stack: 0)
      Expr: ValueData { size: 12, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -76)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -92)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 4
      FunctionCall Function("test::std::vec::create_vec;32;<1>;(1);<int>;(int)") (return on stack: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(1)
    Expr: ValueData { size: 0, location: None }, stack discard: 12
    FunctionCall Function("test::std::vec::push;35;<1>;(2);<int>;(&Struct(test::std::vec::Vec;<1>;<int>),int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Borrow
        LocalVariable (offset: -92)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(10)
    Expr: ValueData { size: 0, location: None }, stack discard: 12
    FunctionCall Function("test::std::vec::push;35;<1>;(2);<int>;(&Struct(test::std::vec::Vec;<1>;<int>),int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Borrow
        LocalVariable (offset: -92)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(20)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::vec::print;31;<0>;(1);<>;(Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -92)
    Expr: ValueData { size: 0, location: None }, stack discard: 12
    FunctionCall Function("test::std::vec::push;35;<1>;(2);<int>;(&Struct(test::std::vec::Vec;<1>;<int>),int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Borrow
        LocalVariable (offset: -92)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(30)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -108)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 16
      FunctionCall Function("test::std::vec::clone;37;<1>;(1);<int>;(Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -92)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::vec::print;31;<0>;(1);<>;(Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -108)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::vec::print;31;<0>;(1);<>;(Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -92)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 0, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -92)
    Expr: ValueData { size: 0, location: None }, stack discard: 12
    FunctionCall Function("test::std::vec::push;35;<1>;(2);<int>;(&Struct(test::std::vec::Vec;<1>;<int>),int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Borrow
        LocalVariable (offset: -92)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(40)
    Expr: ValueData { size: 0, location: None }, stack discard: 12
    FunctionCall Function("test::std::vec::push;35;<1>;(2);<int>;(&Struct(test::std::vec::Vec;<1>;<int>),int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Borrow
        LocalVariable (offset: -92)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(50)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::vec::print;31;<0>;(1);<>;(Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -92)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 0, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -92)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -124)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 24
      FunctionCall Function("test::std::vec::map;38;<2>;(2);<int,int>;(Struct(test::std::vec::Vec;<1>;<int>),fn(int)->int)") (return on stack: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -92)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        FunctionPointer test::::mul2;66;<0>;(1);<>;(int)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::vec::print;31;<0>;(1);<>;(Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -124)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 8
      FunctionCall Function("test::std::vec::pop;36;<1>;(1);<int>;(&Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        Borrow
          LocalVariable (offset: -92)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 8
      FunctionCall Function("test::std::vec::pop;36;<1>;(1);<int>;(&Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        Borrow
          LocalVariable (offset: -92)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 8
      FunctionCall Function("test::std::vec::pop;36;<1>;(1);<int>;(&Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        Borrow
          LocalVariable (offset: -92)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 8
      FunctionCall Function("test::std::vec::pop;36;<1>;(1);<int>;(&Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        Borrow
          LocalVariable (offset: -92)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::vec::print;31;<0>;(1);<>;(Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -92)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -132)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      FunctionPointer test::std::print::println;54;<0>;(1);<>;(int)
    Expr: ValueData { size: 0, location: None }, stack discard: 24
    FunctionCall Function("test::std::vec::foreach;39;<1>;(2);<int>;(Struct(test::std::vec::Vec;<1>;<int>),fn(int)->unit)") (return on stack: 0)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -124)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -132)
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::print::println;48;<0>;(1);<>;(&char)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Constant 12
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -140)
      Expr: ValueData { size: 8, location: Stack }, stack discard: 0
      StructLiteral
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(-11)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(-22)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -145)
      Expr: ValueData { size: 5, location: Stack }, stack discard: 5
      FunctionCall Function("test::::tuple_test;70;<1>;(2);<char>;(char,int)") (return on stack: 5)
        Expr: ValueData { size: 1, location: Register }, stack discard: 0
        Literal Char(99)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(10)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 0, struct size: 8)
        Expr: ValueData { size: 8, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -140)
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("test::std::print::println;50;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      FieldAccess (offset: 4, struct size: 5)
        Expr: ValueData { size: 5, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -145)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -161)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      StructLiteral
          Expr: ValueData { size: 8, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -140)
          Expr: ValueData { size: 8, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -140)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(72)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 0, struct size: 8)
        Expr: ValueData { size: 8, location: Stack }, stack discard: 0
        FieldAccess (offset: 8, struct size: 16)
          Expr: ValueData { size: 16, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -161)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(256)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -177)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      StructLiteral
          Expr: ValueData { size: 8, location: Stack }, stack discard: 0
          StructLiteral
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              Literal Integer(10)
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              Literal Integer(20)
          Expr: ValueData { size: 8, location: Stack }, stack discard: 0
          StructLiteral
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              Literal Integer(30)
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              Literal Integer(40)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -181)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(1)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Unary IntCast(4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -181)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -185)
      Expr: ValueData { size: 4, location: Register }, stack discard: 8
      FunctionCall Function("small_test::::add;72;<0>;(2);<>;(int,int)") (return on stack: 0)
        Expr: ValueData { size: 4, location: Register }, stack discard: 8
        FunctionCall Function("small_test::::add;72;<0>;(2);<>;(int,int)") (return on stack: 0)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(10)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(20)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(20)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -185)
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::print::println;48;<0>;(1);<>;(&char)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Constant 13
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -201)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 4
      FunctionCall Function("test::std::vec::create_sized_vec;33;<1>;(1);<int>;(int)") (return on stack: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(5)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::vec::print;31;<0>;(1);<>;(Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -201)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::vec::free;34;<1>;(1);<int>;(Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -201)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -217)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 4
      FunctionCall Function("test::std::vec::create_sized_vec;33;<1>;(1);<int>;(int)") (return on stack: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(100000)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 4, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -217)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::vec::free;34;<1>;(1);<int>;(Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: -217)
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::print::println;48;<0>;(1);<>;(&char)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Constant 14
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 8
      FunctionCall Function("test::std::vec::pop;36;<1>;(1);<int>;(&Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        Borrow
          LocalVariable (offset: -92)
    Expr: ValueData { size: 0, location: None }, stack discard: 4
    FunctionCall Function("test::std::print::println;54;<0>;(1);<>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 8
      FunctionCall Function("test::std::vec::pop;36;<1>;(1);<int>;(&Struct(test::std::vec::Vec;<1>;<int>))") (return on stack: 0)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        Borrow
          LocalVariable (offset: -92)
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    Binary Math(Add)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FunctionCall Function("test::generic_test::test;10;<0>;(0);<>;()") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 16
      FunctionCall Function("test::std::array::get;0;<1>;(2);<int>;(Struct(test::std::array::Array;<1>;<int>),int)") (return on stack: 0)
        Expr: ValueData { size: 12, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -12)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(9)
  }
fn test::::call_test_fn;68;<0>;(2);<>;(fn(int)->int,int) (stack: 0, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Register }, stack discard: 4
    FunctionCall Pointer(ResolvedExpression { kind: ValueOfAssignable(LocalVariable(20)), value_data: ValueData { size: 8, location: Register }, stack_discard: 0 }) (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
  }
fn test::std::mem::realloc;58;<1>;(2);<int>;(&int,int) (stack: 0, return location: Register)
  Expr: ValueData { size: 8, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 8
    FunctionCall Function("test::std::mem::free;56;<1>;(1);<int>;(&int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 20)
    Expr: ValueData { size: 8, location: Register }, stack discard: 4
    FunctionCall Function("test::std::mem::malloc;57;<1>;(1);<int>;(int)") (return on stack: 0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
  }
fn test::std::vec::create_sized_vec;33;<1>;(1);<int>;(int) (stack: 16, return location: Stack { offset: 20, size: 16 })
  Expr: ValueData { size: 16, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -16)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 0
      StructLiteral
          Expr: ValueData { size: 8, location: Register }, stack discard: 4
          FunctionCall Function("test::std::mem::malloc;57;<1>;(1);<int>;(int)") (return on stack: 0)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("test::std::mem::memset;59;<1>;(3);<int>;(&int,int,int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      FieldAccess (offset: 8, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(0)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 16)
    Expr: ValueData { size: 16, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: -16)
  }
fn test::std::string::print;18;<0>;(1);<>;(Struct(test::std::vec::Vec;<1>;<char>)) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 12
    FunctionCall Function("builtin::::write;-1;<0>;(2);<>;(&char,int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      FieldAccess (offset: 8, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      FieldAccess (offset: 4, struct size: 16)
        Expr: ValueData { size: 16, location: Stack }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
  }
fn test::::tuple_test;70;<1>;(2);<char>;(char,int) (stack: 0, return location: Stack { offset: 21, size: 5 })
  Expr: ValueData { size: 5, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 5, location: Stack }, stack discard: 0
    StructLiteral
        Expr: ValueData { size: 1, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 20)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
  }
fn test::std::mem::memset;59;<1>;(3);<int>;(&int,int,int) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("builtin::::memset;-1;<0>;(3);<>;(&unit,int,int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Unary PointerCast
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 24)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 20)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Binary Math(Mul)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(4)
  }
fn test::std::mem::memset;59;<1>;(3);<char>;(&char,int,int) (stack: 0, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 16
    FunctionCall Function("builtin::::memset;-1;<0>;(3);<>;(&unit,int,int)") (return on stack: 0)
      Expr: ValueData { size: 8, location: Register }, stack discard: 0
      Unary PointerCast
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 24)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        LocalVariable (offset: 20)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Binary Math(Mul)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(1)
  }
fn test::std::vec::map;38;<2>;(2);<int,int>;(Struct(test::std::vec::Vec;<1>;<int>),fn(int)->int) (stack: 20, return location: Stack { offset: 40, size: 16 })
  Expr: ValueData { size: 16, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -16)
      Expr: ValueData { size: 16, location: Stack }, stack discard: 4
      FunctionCall Function("test::std::vec::create_vec;32;<1>;(1);<int>;(int)") (return on stack: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        FieldAccess (offset: 4, struct size: 16)
          Expr: ValueData { size: 16, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 24)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -20)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(0)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Loop
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Less)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -20)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        FieldAccess (offset: 4, struct size: 16)
          Expr: ValueData { size: 16, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 24)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 12
        FunctionCall Function("test::std::vec::push;35;<1>;(2);<int>;(&Struct(test::std::vec::Vec;<1>;<int>),int)") (return on stack: 0)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          Borrow
            LocalVariable (offset: -16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 4
          FunctionCall Pointer(ResolvedExpression { kind: ValueOfAssignable(LocalVariable(16)), value_data: ValueData { size: 8, location: Register }, stack_discard: 0 }) (return on stack: 0)
            Expr: ValueData { size: 4, location: Register }, stack discard: 20
            FunctionCall Function("test::std::vec::get;27;<1>;(2);<int>;(Struct(test::std::vec::Vec;<1>;<int>),int)") (return on stack: 0)
              Expr: ValueData { size: 16, location: Stack }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: 24)
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: -20)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Increment (prefix: false)
          LocalVariable (offset: -20)
      }
    Expr: ValueData { size: 16, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: -16)
  }
fn test::std::vec::pop;36;<1>;(1);<int>;(&Struct(test::std::vec::Vec;<1>;<int>)) (stack: 12, return location: Register)
  Expr: ValueData { size: 4, location: Register }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    If
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Equals)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          PointerFieldAccess (offset: 4, indirections: 1)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Literal Integer(0)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 8
        FunctionCall Function("test::std::panic::panic;55;<0>;(1);<>;(&char)") (return on stack: 0)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          Constant 15
      }
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    Decrement (prefix: false)
      PointerFieldAccess (offset: 4, indirections: 1)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: 16)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -4)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      ValueOfAssignable
        ArrayIndex (element_size: 4)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          ValueOfAssignable
            PointerFieldAccess (offset: 8, indirections: 1)
              Expr: ValueData { size: 8, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            PointerFieldAccess (offset: 4, indirections: 1)
              Expr: ValueData { size: 8, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: 16)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    If
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Less)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          PointerFieldAccess (offset: 4, indirections: 1)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 16)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Binary Math(Div)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            PointerFieldAccess (offset: 0, indirections: 1)
              Expr: ValueData { size: 8, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(2)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Assign MathAssign(Div)
          PointerFieldAccess (offset: 0, indirections: 1)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 16)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          Literal Integer(2)
        Expr: ValueData { size: 0, location: None }, stack discard: 0
        Declaration (offset: -12)
          Expr: ValueData { size: 8, location: Register }, stack discard: 12
          FunctionCall Function("test::std::mem::realloc;58;<1>;(2);<int>;(&int,int)") (return on stack: 0)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              PointerFieldAccess (offset: 8, indirections: 1)
                Expr: ValueData { size: 8, location: Register }, stack discard: 0
                ValueOfAssignable
                  LocalVariable (offset: 16)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              PointerFieldAccess (offset: 0, indirections: 1)
                Expr: ValueData { size: 8, location: Register }, stack discard: 0
                ValueOfAssignable
                  LocalVariable (offset: 16)
        Expr: ValueData { size: 0, location: None }, stack discard: 20
        FunctionCall Function("test::std::mem::memcopy;60;<1>;(3);<int>;(&int,&int,int)") (return on stack: 0)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          ValueOfAssignable
            PointerFieldAccess (offset: 8, indirections: 1)
              Expr: ValueData { size: 8, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: 16)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -12)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            PointerFieldAccess (offset: 4, indirections: 1)
              Expr: ValueData { size: 8, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: 16)
        Expr: ValueData { size: 8, location: Register }, stack discard: 0
        Assign Assign
          PointerFieldAccess (offset: 8, indirections: 1)
            Expr: ValueData { size: 8, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: 16)
          Expr: ValueData { size: 8, location: Register }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: -12)
      }
    Expr: ValueData { size: 4, location: Register }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: -4)
  }
fn test::std::vec::print;31;<0>;(1);<>;(Struct(test::std::vec::Vec;<1>;<int>)) (stack: 4, return location: None)
  Expr: ValueData { size: 0, location: None }, stack discard: 0
  {
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Declaration (offset: -4)
      Expr: ValueData { size: 4, location: Register }, stack discard: 0
      Literal Integer(0)
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(91)
    Expr: ValueData { size: 0, location: None }, stack discard: 0
    Loop
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Binary Comparison(Less)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        ValueOfAssignable
          LocalVariable (offset: -4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        FieldAccess (offset: 4, struct size: 16)
          Expr: ValueData { size: 16, location: Stack }, stack discard: 0
          ValueOfAssignable
            LocalVariable (offset: 16)
      Expr: ValueData { size: 0, location: None }, stack discard: 0
      {
        Expr: ValueData { size: 0, location: None }, stack discard: 0
        If
          Expr: ValueData { size: 1, location: Register }, stack discard: 0
          Binary Comparison(Greater)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            ValueOfAssignable
              LocalVariable (offset: -4)
            Expr: ValueData { size: 4, location: Register }, stack discard: 0
            Literal Integer(0)
          Expr: ValueData { size: 0, location: None }, stack discard: 0
          {
            Expr: ValueData { size: 0, location: None }, stack discard: 1
            FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
              Expr: ValueData { size: 1, location: Register }, stack discard: 0
              Literal Char(44)
            Expr: ValueData { size: 0, location: None }, stack discard: 1
            FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
              Expr: ValueData { size: 1, location: Register }, stack discard: 0
              Literal Char(32)
          }
        Expr: ValueData { size: 0, location: None }, stack discard: 4
        FunctionCall Function("test::std::print::print;53;<0>;(1);<>;(int)") (return on stack: 0)
          Expr: ValueData { size: 4, location: Register }, stack discard: 0
          ValueOfAssignable
            ArrayIndex (element_size: 4)
              Expr: ValueData { size: 8, location: Register }, stack discard: 0
              FieldAccess (offset: 8, struct size: 16)
                Expr: ValueData { size: 16, location: Stack }, stack discard: 0
                ValueOfAssignable
                  LocalVariable (offset: 16)
              Expr: ValueData { size: 4, location: Register }, stack discard: 0
              ValueOfAssignable
                LocalVariable (offset: -4)
        Expr: ValueData { size: 4, location: Register }, stack discard: 0
        Increment (prefix: false)
          LocalVariable (offset: -4)
      }
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(93)
    Expr: ValueData { size: 0, location: None }, stack discard: 1
    FunctionCall Function("builtin::::write_char;-1;<0>;(1);<>;(char)") (return on stack: 0)
      Expr: ValueData { size: 1, location: Register }, stack discard: 0
      Literal Char(10)
  }
fn test::generic_test::generic_function2;12;<1>;(1);<Struct(test::generic_test::Option;<1>;<int>)>;(Struct(test::generic_test::Option;<1>;<Struct(test::generic_test::Option;<1>;<int>)>)) (stack: 0, return location: Stack { offset: 20, size: 4 })
  Expr: ValueData { size: 4, location: Stack }, stack discard: 0
  {
    Expr: ValueData { size: 4, location: Stack }, stack discard: 0
    ValueOfAssignable
      LocalVariable (offset: 16)
  }
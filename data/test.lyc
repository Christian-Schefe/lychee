int main() {
    let var str = newString(100);
    readString(&str);
    printString(&str);
    let int num = stringToInt(&str);
    let int numToGuess = rand(10);
    write_num(numToGuess);
    write_char('\n');
    if num == numToGuess {
        write_char('Y');
        write_char('e');
        write_char('s');
    } else {
        write_char('N');
        write_char('o');
    };
    write_char('\n');
    num
}

struct String {
    &char data;
    int size;
}

String newString(int size) {
    let String str = new String {
        data: malloc(size) as &char,
        size: size
    };
    str
}

int rand(int max) {
    let long r = random();
    ((r % max as long) as int + max) % max
}

unit readString(&String str) {
    let int i = 0;
    while (i < str.size) {
        let char c = read_char();
        if c == '\n' || c == '\r' {
            break;
        };
        set(str, i, c);
        i++;
    };
}

char get(&String str, int index) {
    return str.data[index];
}

unit set(&String str, int index, char value) {
    str.data[index] = value;
}

unit printString(&String str) {
    let int i = 0;
    write_char('"');
    while (i < str.size) {
        write_char(get(str, i));
        i++;
    };
    write_char('"');
    write_char('\n');
}

int stringToInt(&String str) {
    let int i = 0;
    let int num = 0;
    let int sign = 1;
    if get(str, 0) == '-' {
        sign = -1;
        i++;
    };
    while (i < str.size) {
        num = num * 10 + (get(str, i) as int - '0' as int);
        i++;
    };
    num * sign
}

unit write_num(int num) {
    if num == 0 {
        write_char((num % 10 + '0' as int) as char);
        return;
    } else if num < 0 {
        write_char('-');
        num = -num;
    };

    if num >= 10 {
        write_num(num / 10);
    };
    write_char((num % 10 + '0' as int) as char);
}

import builtin::{write_char, write};

unit print(&char literal) {
    let int i = 0;
    while (literal[i] != '\0') {
        i++;
    };
    write(literal, i);
}

unit println(&char literal) {
    print(literal);
    write_char('\n');
}

unit print(char c) {
    write_char(c);
}

unit println(char c) {
    write_char(c);
    write_char('\n');
}

unit print(bool b) {
    if b {
        print("true");
    } else {
        print("false");
    };
}

unit println(bool b) {
    print(b);
    write_char('\n');
}

unit print(int num) {
    if num < 0 {
        write_char('-');
        num = -num;
    };
    if num <= 9 {
        write_char((num % 10 + '0' as int) as char);
        return;
    };

    let var divisor = 1;

    while num / divisor >= 10 {
        divisor *= 10;
    };

    while divisor > 0 {
        let var digit = num / divisor;
        write_char((digit + '0' as int) as char);
        num %= divisor;
        divisor /= 10;
    };
}

unit println(int num) {
    print(num);
    write_char('\n');
}